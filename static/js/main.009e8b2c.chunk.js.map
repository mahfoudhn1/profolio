{"version":3,"sources":["components/about/profile.jpeg","components/header/back.jpg","components/Navbar/Navbar.js","components/header/Header.js","components/about/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","href","activeClass","to","spy","smooth","hashSpy","offset","duration","delay","isDynamic","ignoreCancelEvents","Header","class","About","id","src","profile","alt","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,sC,2ICA3CD,EAAOC,QAAU,IAA0B,kC,2HC6F5BC,MAxFf,WACI,OACI,yBAAKC,UAAU,OACX,4BAAI,uBAAGC,KAAK,KAAR,QACJ,4BACA,4BACI,kBAAC,OAAD,CAAMC,YAAY,SAClBC,GAAG,QACHC,KAAK,EACLC,QAAQ,EACRC,SAAS,EACTC,OAAQ,GACRC,SAAU,IACVC,MAAO,IACPC,WAAW,EACXC,oBAAoB,GATpB,UAcA,4BACA,kBAAC,OAAD,CAAMT,YAAY,SAClBC,GAAG,SACHC,KAAK,EACLC,QAAQ,EACRC,SAAS,EACTC,OAAQ,GACRC,SAAU,IACVC,MAAO,IACPC,WAAW,EACXC,oBAAoB,GATpB,aAcA,4BACA,kBAAC,OAAD,CAAMT,YAAY,SAClBC,GAAG,SACHC,KAAK,EACLC,QAAQ,EACRC,SAAS,EACTC,OAAQ,GACRC,SAAU,IACVC,MAAO,IACPC,WAAW,EAEXC,oBAAoB,GAVpB,UAeA,4BACA,kBAAC,OAAD,CAAMT,YAAY,SAClBC,GAAG,SACHC,KAAK,EACLC,QAAQ,EACRC,SAAS,EACTC,OAAQ,GACRC,SAAU,IACVC,MAAO,IACPC,WAAW,EAEXC,oBAAoB,GAVpB,WAeA,4BACA,kBAAC,OAAD,CAAMT,YAAY,SAClBC,GAAG,SACHC,KAAK,EACLC,QAAQ,EACRC,SAAS,EACTC,OAAQ,GACRC,SAAU,IACVC,MAAO,IACPC,WAAW,EAEXC,oBAAoB,GAVpB,e,YCnCDC,MAhCf,WAEI,OACI,yBAAKZ,UAAU,UACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,QACX,kCACA,4CACA,uBAAGA,UAAU,YAAb,uCAEA,kBAAC,OAAD,CAAME,YAAY,SACdC,GAAG,QACHC,KAAK,EACLC,QAAQ,EACRC,SAAS,EACTC,OAAQ,GACRC,SAAU,IACVC,MAAO,IACPC,WAAW,EACXC,oBAAoB,GAExB,yBAAKE,MAAM,gBACX,yBAAKA,MAAM,UACP,yBAAKA,MAAM,mB,yBCChBC,MA1Bf,WACI,OACI,yBAAKd,UAAU,QAAQe,GAAG,SACtB,wBAAIf,UAAU,SAAd,gBACA,yBAAKA,UAAU,cACX,yBAAKA,UAAU,WACX,yBAAKgB,IAAKC,IAAUC,IAAK,eACzB,yBAAKlB,UAAU,YAEnB,yBAAKA,UAAU,gBACX,gDACA,mQAIA,yBAAKA,UAAU,gBACX,uBAAGC,KAAK,IAAG,uBAAGY,MAAM,uBACpB,uBAAGZ,KAAK,IAAG,uBAAGY,MAAM,oBACpB,uBAAGZ,KAAK,IAAG,uBAAGY,MAAM,4BCR7BM,MATf,WACE,OACE,yBAAKnB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCGcoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.009e8b2c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.2ec46173.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/back.971675ce.jpg\";","import React from 'react'\nimport './navbar.scss'\nimport { Link } from 'react-scroll'\n\n\nfunction Navbar() {\n    return (\n        <div className=\"nav\">\n            <h1><a href='#'>Mah</a></h1>\n            <ul>\n            <li>\n                <Link activeClass=\"active\"\n                to=\"about\"\n                spy={true}\n                smooth={true}\n                hashSpy={true}\n                offset={50}\n                duration={500}\n                delay={100}\n                isDynamic={true}\n                ignoreCancelEvents={false}\n                >\n                About\n                </Link>\n                </li>\n                <li>\n                <Link activeClass=\"active\"\n                to=\"target\"\n                spy={true}\n                smooth={true}\n                hashSpy={true}\n                offset={50}\n                duration={500}\n                delay={100}\n                isDynamic={true}\n                ignoreCancelEvents={false}\n                >\n                Projects\n                </Link>\n                </li>\n                <li>\n                <Link activeClass=\"active\"\n                to=\"target\"\n                spy={true}\n                smooth={true}\n                hashSpy={true}\n                offset={50}\n                duration={500}\n                delay={100}\n                isDynamic={true}\n\n                ignoreCancelEvents={false}\n                >\n                Skils\n                </Link>\n                </li>\n                <li>\n                <Link activeClass=\"active\"\n                to=\"target\"\n                spy={true}\n                smooth={true}\n                hashSpy={true}\n                offset={50}\n                duration={500}\n                delay={100}\n                isDynamic={true}\n\n                ignoreCancelEvents={false}\n                >\n                Resume\n                </Link>\n                </li>\n                <li>\n                <Link activeClass=\"active\"\n                to=\"target\"\n                spy={true}\n                smooth={true}\n                hashSpy={true}\n                offset={50}\n                duration={500}\n                delay={100}\n                isDynamic={true}\n\n                ignoreCancelEvents={false}\n                >\n                Contact\n                </Link>\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\nimport Navbar from '../Navbar/Navbar'\nimport './header.scss'\nimport  back from './back.jpg'\nimport { Link } from 'react-scroll'\n\nfunction Header() {\n\n    return (\n        <div className=\"header\">\n            <Navbar />\n            <div className=\"body\">\n                <h1>Hi</h1>\n                <h1>I am Mahfoud</h1>\n                <p className=\"header-p\">and i am a full stack Web Developer</p>\n                \n                <Link activeClass=\"active\"\n                    to=\"about\"\n                    spy={true}\n                    smooth={true}\n                    hashSpy={true}\n                    offset={50}\n                    duration={500}\n                    delay={100}\n                    isDynamic={true}\n                    ignoreCancelEvents={false}\n                >\n                <div class=\"scroll-downs\">\n                <div class=\"mousey\">\n                    <div class=\"scroller\"></div>\n                </div>\n                </div> \n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport \"./about.scss\"\nimport profile from './profile.jpeg'\n\nfunction About() {\n    return (\n        <div className=\"about\" id=\"about\">\n            <h1 className=\"title\"> -About Me- </h1>\n            <div className='about-body'>\n                <div className=\"picture\">\n                    <img src={profile}  alt= 'profilepic'/>\n                    <div className=\"square\" ></div>\n                </div>\n                <div className=\"text-section\">\n                    <h1>Mahfoud Hentouri</h1>\n                    <p>Hello World my name is mahfoud hentouri and i am a full stack web developer\n                        i am from algeria and my hobby is to learn deffrent and new technologies\n                        i have also intermidate knowledge in Networking (CCNA) and security (security+)\n                    </p>\n                    <div className=\"social-media\">\n                        <a href=\"\"><i class=\"fab fa-github-alt\"></i></a>\n                        <a href=\"\"><i class=\"fab fa-twitter\"></i></a>\n                        <a href=\"\"><i class=\"fab fa-hackerrank\"></i></a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default About\n","import React from 'react';\nimport './App.scss';\nimport Header from './components/header/Header';\nimport About from './components/about/About';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <About />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}